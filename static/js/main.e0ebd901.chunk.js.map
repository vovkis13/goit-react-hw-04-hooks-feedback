{"version":3,"sources":["components/Statistics/Statistics.module.css","components/Section/Section.module.css","components/Button/Button.module.css","components/FeedbackOptions/FeedbackOptions.module.css","components/Notification/Notification.module.css","components/Section/Section.jsx","components/Button/Button.jsx","components/FeedbackOptions/FeedbackOptions.jsx","components/Statistics/Statistics.jsx","components/Notification/Notification.jsx","components/App/App.jsx","index.js"],"names":["module","exports","Section","title","children","className","s","section","Button","incrementValue","type","button","onClick","FeedbackOptions","options","onLeaveFeedback","buttons","map","value","Statistics","stat","total","positivePercentage","option","i","percentage","Notification","message","OPTIONS","App","useState","values","setValues","update","setUpdate","useRef","positive","useEffect","current","reduce","sum","Math","round","e","idx","indexOf","target","innerHTML","prevArr","slice","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6IACAA,EAAOC,QAAU,CAAC,MAAQ,0BAA0B,WAAa,+BAA+B,OAAS,qD,iBCAzGD,EAAOC,QAAU,CAAC,QAAU,yBAAyB,MAAQ,yB,mBCA7DD,EAAOC,QAAU,CAAC,OAAS,yB,gBCA3BD,EAAOC,QAAU,CAAC,QAAU,mC,gBCA5BD,EAAOC,QAAU,CAAC,QAAU,gC,oICGb,SAASC,EAAT,GAAuC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACvC,OACE,0BAASC,UAAWC,IAAEC,QAAtB,UACE,oBAAIF,UAAWC,IAAEH,MAAjB,SAAyBA,IACxBC,K,qBCJQ,SAASI,EAAT,GAA4C,IAA1BL,EAAyB,EAAzBA,MAAOM,EAAkB,EAAlBA,eACtC,OACE,wBAAQC,KAAK,SAASL,UAAWC,IAAEK,OAAQC,QAASH,EAApD,SACGN,I,qBCFQ,SAASU,EAAT,GAAwD,IAA7BC,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,gBACjD,OACE,qBAAKV,UAAWC,IAAEU,QAAlB,SACGF,EAAQG,KAAI,SAAAC,GAAK,OAChB,cAACV,EAAD,CAAQL,MAAOe,EAAOT,eAAgBM,GAAsBG,Q,oBCLrD,SAASC,EAAT,GAKX,IAJFL,EAIC,EAJDA,QACAM,EAGC,EAHDA,KACAC,EAEC,EAFDA,MACAC,EACC,EADDA,mBAEA,OACE,gCACGR,EAAQG,KAAI,SAACM,EAAQC,GAAT,OACX,oBAAGnB,UAAWC,IAAEiB,OAAhB,UACGA,EADH,KACaH,EAAKI,KADWD,MAI/B,oBAAGlB,UAAWC,IAAEe,MAAhB,oBAA+BA,KAC/B,oBAAGhB,UAAWC,IAAEmB,WAAhB,gCACsBH,EAAqB,U,qBCflC,SAASI,EAAT,GAAoC,IAAZC,EAAW,EAAXA,QACrC,OAAO,oBAAGtB,UAAWC,IAAEqB,QAAhB,UAA0BA,EAA1B,OCCT,IAAMC,EAAU,CAAC,OAAQ,UAAW,OAErB,SAASC,IACtB,MAA4BC,mBAAS,CAAC,EAAG,EAAG,IAA5C,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAA4BF,oBAAS,GAArC,mBAAOG,EAAP,KAAeC,EAAf,KACMb,EAAQc,iBAAO,GACfC,EAAWD,iBAAO,GAiBxB,OANAE,qBAAU,WACRhB,EAAMiB,QAAUP,EAAOQ,QAAO,SAACC,EAAKtB,GAAN,OAAgBsB,EAAMtB,IAAO,GACvDG,IAAOe,EAASE,QAAUG,KAAKC,MAAOX,EAAO,GAAKV,EAAMiB,QAAW,MACvEJ,GAAWD,KACV,CAACF,EAAQE,IAGV,gCACE,cAAC/B,EAAD,CAASC,MAAM,wBAAf,SACE,cAACU,EAAD,CAAiBC,QAASc,EAASb,gBAlBlB,SAAA4B,GACrB,IAAMC,EAAMhB,EAAQiB,QAAQF,EAAEG,OAAOC,WACrCf,GAAU,SAAAgB,GAAO,4BACZjB,EAAOkB,MAAM,EAAGL,IADJ,CAEfI,EAAQJ,GAAO,GAFA,YAGZb,EAAOkB,MAAML,EAAM,aAetB,eAAC1C,EAAD,CAASC,MAAM,aAAf,YACKkB,EAAMiB,SACP,cAACnB,EAAD,CACEL,QAASc,EACTR,KAAMW,EACNV,MAAOA,EAAMiB,QACbhB,mBAAoBc,EAASE,WAG/BjB,EAAMiB,SAAW,cAACZ,EAAD,CAAcC,QAAQ,+B,MCtCjDuB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACvB,EAAD,MAEFwB,SAASC,eAAe,W","file":"static/js/main.e0ebd901.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"total\":\"Statistics_total__1velb\",\"percentage\":\"Statistics_percentage__1dWdY\",\"option\":\"Statistics_option__Klq9f Statistics_total__1velb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__3lxgp\",\"title\":\"Section_title__23AZL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__1l5OF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttons\":\"FeedbackOptions_buttons__2Wpyl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Notification_message__1qRUh\"};","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport s from \"./Section.module.css\";\r\n\r\nexport default function Section({ title, children }) {\r\n  return (\r\n    <section className={s.section}>\r\n      <h2 className={s.title}>{title}</h2>\r\n      {children}\r\n    </section>\r\n  );\r\n}\r\nSection.propTypes = {\r\n  title: PropTypes.string,\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport s from \"./Button.module.css\";\r\n\r\nexport default function Button({ title, incrementValue }) {\r\n  return (\r\n    <button type=\"button\" className={s.button} onClick={incrementValue}>\r\n      {title}\r\n    </button>\r\n  );\r\n}\r\n\r\nButton.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  incrementValue: PropTypes.func.isRequired,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Button from '../Button';\r\nimport s from './FeedbackOptions.module.css';\r\n\r\nexport default function FeedbackOptions({ options, onLeaveFeedback }) {\r\n  return (\r\n    <div className={s.buttons}>\r\n      {options.map(value => (\r\n        <Button title={value} incrementValue={onLeaveFeedback} key={value} />\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nFeedbackOptions.propTypes = {\r\n  options: PropTypes.array,\r\n  onLeaveFeedback: PropTypes.func,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './Statistics.module.css';\r\n\r\nexport default function Statistics({\r\n  options,\r\n  stat,\r\n  total,\r\n  positivePercentage,\r\n}) {\r\n  return (\r\n    <div>\r\n      {options.map((option, i) => (\r\n        <p className={s.option} key={option}>\r\n          {option}: {stat[i]}\r\n        </p>\r\n      ))}\r\n      <p className={s.total}>Total: {total}</p>\r\n      <p className={s.percentage}>\r\n        Positive feedback: {positivePercentage + '%'}\r\n      </p>\r\n    </div>\r\n  );\r\n}\r\nStatistics.propTypes = {\r\n  options: PropTypes.array.isRequired,\r\n  stat: PropTypes.array.isRequired,\r\n  total: PropTypes.number.isRequired,\r\n  positivePercentage: PropTypes.number.isRequired,\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport s from \"./Notification.module.css\";\r\n\r\nexport default function Notification({ message }) {\r\n  return <p className={s.message}>{message} </p>;\r\n}\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string.isRequired,\r\n};\r\n","import { useState, useRef, useEffect } from 'react';\r\nimport Section from '../Section';\r\nimport FeedbackOptions from '../FeedbackOptions';\r\nimport Statistics from '../Statistics';\r\nimport Notification from '../Notification';\r\n\r\nconst OPTIONS = ['good', 'neutral', 'bad'];\r\n\r\nexport default function App() {\r\n  const [values, setValues] = useState([0, 0, 0]);\r\n  const [update, setUpdate] = useState(false);\r\n  const total = useRef(0);\r\n  const positive = useRef(0);\r\n\r\n  const incrementValue = e => {\r\n    const idx = OPTIONS.indexOf(e.target.innerHTML);\r\n    setValues(prevArr => [\r\n      ...values.slice(0, idx),\r\n      prevArr[idx] + 1,\r\n      ...values.slice(idx + 1),\r\n    ]);\r\n  };\r\n\r\n  useEffect(() => {\r\n    total.current = values.reduce((sum, value) => sum + value, 0);\r\n    if (total) positive.current = Math.round((values[0] / total.current) * 100);\r\n    setUpdate(!update);\r\n  }, [values, update]);\r\n\r\n  return (\r\n    <div>\r\n      <Section title=\"Please leave feedback\">\r\n        <FeedbackOptions options={OPTIONS} onLeaveFeedback={incrementValue} />\r\n      </Section>\r\n      <Section title=\"Statistics\">\r\n        {!!total.current && (\r\n          <Statistics\r\n            options={OPTIONS}\r\n            stat={values}\r\n            total={total.current}\r\n            positivePercentage={positive.current}\r\n          />\r\n        )}\r\n        {!total.current && <Notification message=\"There is no feedback\" />}\r\n      </Section>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App';\r\nimport './index.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}